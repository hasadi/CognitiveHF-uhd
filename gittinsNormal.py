##
## Hamed Asadi
## Gittins index normal unit variable
###############################################################################################################################
## PLEASE DO "NOT" EDIT THIS FILE!
###############################################################################################################################

import numpy as np
import random
import math
import sqlite3

def GittinsIndexNormalUnitVar(No,Discount_F):
    Discount_F_index = np.array([0.5,0.6,0.7,0.8,0.9,0.95,0.99,0.995])
    No_index = np.array([1,2,3,4,5,6,7,8,9,10,20,30,40,50,60,70,80,90,
              100,200,300,400,500,600,700,800,900,1000,9999999])
    V_index = np.matrix([[0.14542, 0.17451, 0.20218, 0.22582, 0.23609, 0.22263, 0.15758, 0.12852],
                       [0.17209, 0.20815, 0.24359, 0.27584, 0.29485, 0.28366, 0.20830, 0.17192],
                       [0.18522, 0.22513, 0.26515, 0.30297, 0.32876, 0.32072, 0.24184, 0.20137],
                       [0.19317, 0.23560, 0.27874, 0.32059, 0.35179, 0.34687, 0.26709, 0.22398],
                       [0.19855, 0.24277, 0.28820, 0.33314, 0.36879, 0.36678, 0.28736, 0.24242],
                       [0.20244, 0.24801, 0.29521, 0.34261, 0.38200, 0.38267, 0.30429, 0.25803],
                       [0.20539, 0.25202, 0.30063, 0.35005, 0.39265, 0.39577, 0.31881, 0.27158],
                       [0.20771, 0.25520, 0.30496, 0.35607, 0.40146, 0.40682, 0.33149, 0.28356],
                       [0.20959, 0.25777, 0.30851, 0.36105, 0.40889, 0.41631, 0.34275, 0.29428],
                       [0.21113, 0.25991, 0.31147, 0.36525, 0.41526, 0.42458, 0.35285, 0.30400],
                       [.21867, .27048, .32642, .38715, .45047, .47295, .41888, .36986],
                       [.22142, .27443, .33215, .39593, .46577, .49583, .45587, .40886],
                       [.22286, .27650, .33520, .40070, .47448, .50953, .48072, .43613],
                       [.22374, .27778, .33709, .40370, .48013, .51876, .49898, .45679],
                       [.22433, .27864, .33838, .40577, .48411, .52543, .51313, .47324],
                       [.22476, .27927, .33932, .40728, .48707, .53050, .52451, .48677],
                       [.22508, .27974, .34003, .40843, .48935, .53449, .53391, .49817],
                       [.22534, .28011, .34059, .40934, .49117, .53771, .54184, .50796],
                       [.22554, .28041, .34104, .41008, .49266, .54037, .54864, .51648],
                       [.22646, .28177, .34311, .41348, .49970, .55344, .58626, .56637],
                       [.22678, .28223, .34381, .41466, .50219, .55829, .60270, .59006],
                       [.22693, .28246, .34416, .41525, .50347, .56084, .61220, .60436],
                       [.22703, .28260, .34438, .41561, .50425, .56242, .61844, .61410],
                       [.22709, .28270, .34452, .41585, .50478, .56351, .62290, .62123],
                       [.22714, .28276, .34462, .41602, .50516, .56431, .62629, .62674],
                       [.22717, .28281, .34470, .41615, .50545, .56493, .62896, .63116],
                       [.22720, .28285, .34476, .41625, .50568, .56543, .63121, .63481],
                       [.22722, .28288, .34480, .41633, .50587, .56583, .63308, .63789],
                       [.22741, .28316, .34524, .41714, .5092, .583, .65, .65]])
    j = 0
    for k in Discount_F_index:
        if k==Discount_F:
            a_i=j
            break
        j=j+1
##    a_i = np.where(Discount_F_index==Discount_F)
    j = 0
    flag = 0
    for i in No_index:
        if i==No:
            n_i=j
            break
        elif i>No:
            n_i=j
            flag = 1
            break
        j=j+1

    if flag==1:
        v1=V_index[n_i-1,a_i]
        v2=V_index[n_i,a_i]
        v=v1+(v2-v1)*((No-No_index[n_i-1])/(No_index[n_i]-No_index[n_i-1]))
    elif flag==0:
        v=V_index[n_i,a_i]

    idx=v/(No*np.sqrt(1-Discount_F))
    return idx
